FILENAME_BASE_P = string.gsub( FILENAME_BASE, "-", "_" )

-- 生成目标文件名
OUTPUT_FILENAME        = FILENAME_BASE_P .. ".cpp"

-- 文件注释
FILE_NOTE           = [[]]

-- 目标文件需要包含头文件
INCLUDE_FILE           = "#include \""..FILENAME_BASE_P..".h\"\n" ..
[[

#define DEFAULT_REFRESH_INTERVAL 60

//Start oid define
]]

--------------------------------------------------------------------------------------
-- 函数模板
--------------------------------------------------------------------------------------
function IsInteger( TypeName )
    if TypeName == "Integer32" or 
       TypeName == "Gauge32" or 
       TypeName == "Counter32" or 
       TypeName == "Counter64" or
       TypeName == "Enumeration" or 
       TypeName == "InterfaceIndex" then
         return true
    else return false
    end
end

function IsString( TypeName )
    if TypeName == "IpAddress" or
       TypeName == "OctetString" or 
       TypeName == "DisplayString" or 
       TypeName == "Float" or 
       TypeName == "DateAndTime" then
         return true
    else return false
    end
end

-- 对象模板
function FUNC_OBJECT_TEMPLATE ( Name, Oid, TypeName )
    Typeset = ""
    if IsInteger( TypeName ) then
        Typeset = "        //set int value here\n" ..
                  "        MIB_SET_INT( OID_"..string.upper(Name)..", /*value*/ )\n"
    elseif IsString( TypeName ) then
        Typeset = "        //set string value here\n" ..
                  "        MIB_SET_STR( OID_"..string.upper(Name)..", /*value*/ )\n"
    else
        error( "'" .. TypeName .. "' " .. "undefined type")
    end
    
    return "" ..
           "\n// object-type " .. Name .. "\n" ..
           "void MIB_" .. Name .. "( void* caller )\n" ..
           "{\n" ..
           "    MIB_BEGIN(caller);\n" ..
           "        //TODO\n" ..
           Typeset ..
           "    MIB_END();\n" ..
           "}\n"
end

-- column对象模板
function FUNC_OBJECT_TEMPLATE_COLUMN ( Name, Oid, TypeName )
    Typeset = ""
    if IsInteger( TypeName ) then
        Typeset = "            //set int value here, Oid = " .. Oid .. "\n" ..
                  "            MIB_ROW_SET_INT( " .. string.sub(Oid, string.find(Oid, "%d+$")).. ", /*value*/ )"
    elseif IsString( TypeName ) then
        Typeset = "            //set string value here, Oid = " .. Oid .. "\n" ..
                  "            MIB_ROW_SET_STR( " .. string.sub(Oid, string.find(Oid, "%d+$")).. ", /*value*/ )"
    else
        error( "'" .. TypeName .. "' " .. "undefined type")
    end
    
    return "\n" .. Typeset
end

-- table对象模板
function FUNC_OBJECT_TEMPLATE_TABLE ( Name, Oid, TypeName, Row )
    return "\n// object-type " .. Name .. "\n" ..
           "void MIB_" .. Name .. "( void* caller )\n" ..
           "{\n" ..
           "    MIB_BEGIN(caller);\n" ..
           "    MIB_TABLE_BEGIN(OID_"..string.upper(Name)..");\n" ..
           "        //TODO\n" ..
           "        //set row value here for table OID_"..string.upper(Name).."\n\n" ..
           "        //TODO for i to n\n" ..
           "        {\n" ..
           "            MIB_ROW_BEGIN(i);\n" ..
           Row.."\n\n" ..
           "            MIB_ROW_END();\n" ..
           "        }\n\n"..
           "    MIB_TABLE_END();\n" ..
           "    MIB_END();\n" ..
           "}\n"
end

-- Object-type define
function FUNC_DEFINE_OBJECT_TEMPLATE ( Name, Oid, TypeName )
    return "#define OID_"..string.upper(Name).." \""..Oid.."\"\n"
end

-- 注册Object-type
function FUNC_REG_OBJECT_TEMPLATE ( Name, Oid, TypeName )
    return "\n" ..
           "    // object-type " ..Name.." \n" ..
           "    apoAgent->RegisterCallback( OID_"..string.upper(Name)..", MIB_"..Name..", DEFAULT_REFRESH_INTERVAL );\n"
end

-- 初始化函数
function FUNC_INITIALIZ_TEMPLATE ( RegObjectType )
    return "\n// object-type initialize function\n" ..
           "void MIB_Initialize( AIAgent* apoAgent )\n" ..
           "{\n" ..
           "    // register object-type here\n" ..
           RegObjectType ..
           "}\n";
end
